{
  "version": 3,
  "sources": ["../src/html.ts"],
  "sourcesContent": ["const proto = {\n    html(this: HTMLElement, v?: string): string | HTMLElement {\n        if (v !== undefined) {\n            this.innerHTML = v;\n            return this;\n        } else {\n            return this.innerHTML;\n        }\n    },\n\n    v(this: HTMLInputElement, v?: string): string | HTMLInputElement {\n        if (v !== undefined) {\n            this.value = v;\n            return this;\n        } else {\n            return this.value;\n        }\n    },\n\n    on(this: HTMLElement, event: string, fn: EventListenerOrEventListenerObject) {\n        this.addEventListener(event, fn);\n        return this;\n    },\n\n    css(this: HTMLElement, style: string | Record<string, string>, val: string | null = null) {\n        if (typeof style === \"string\") {\n            if (val !== null) {\n                this.style[style] = val;\n            } else {\n                this.style.cssText = style;\n            }\n        } else {\n            Object.assign(this.style, style);\n        }\n        return this;\n    },\n\n    attrib(this: HTMLElement, att: string, arg: string | null = null): string | HTMLElement {\n        if (arg !== null) {\n            this.setAttribute(att, arg);\n            return this;\n        } else {\n            return this.getAttribute(att) || \"\";\n        }\n    },\n\n    clA(this: HTMLElement, ...arg: string[]): HTMLElement {\n        this.classList.add(...arg);\n        return this;\n    },\n\n    clR(this: HTMLElement, ...arg: string[]): HTMLElement {\n        this.classList.remove(...arg);\n        return this;\n    },\n\n    clT(this: HTMLElement, className: string, force?: boolean): HTMLElement {\n        this.classList.toggle(className, force);\n        return this;\n    },\n\n    animateFade(\n        this: HTMLElement,\n        from: number,\n        options: { time?: number; cb?: () => void } = {}\n    ): HTMLElement {\n        const { time = 200, cb } = options;\n        const element = this;\n        const targetOpacity = from === 0 ? 1 : 0;\n\n        const startOpacity = Math.min(1, Math.max(0, from));\n        const startTime = performance.now();\n\n        element.style.opacity = startOpacity.toString();\n\n        function step(currentTime: number) {\n            const elapsed = currentTime - startTime;\n            const progress = Math.min(elapsed / time, 1);\n\n            const currentOpacity = startOpacity + (targetOpacity - startOpacity) * progress;\n            element.style.opacity = currentOpacity.toString();\n\n            if (progress < 1) {\n                requestAnimationFrame(step);\n            } else {\n                element.style.opacity = targetOpacity.toString();\n                cb?.();\n            }\n        }\n\n        requestAnimationFrame(step);\n        return this;\n    },\n\n    fadeIn(this: HTMLElement, ...args: any): HTMLElement {\n        const opts = convert({\n            display: \"string\",\n            cb: \"function\",\n            time: \"number\",\n        }, args);\n\n        let { display = \"block\" } = opts;\n\n        this.css(\"display\", display);\n        this.animateFade(0, opts);\n        this.fade = true;\n        return this;\n    },\n\n    fadeOut(this: HTMLElement, ...args: any[]): HTMLElement {\n        const opts = convert({\n            cb: \"function\",\n            time: \"number\",\n        }, args);\n        const time = opts.time ?? 300;\n        opts.time = time;\n        this.animateFade(1, {\n            ...opts,\n            cb: () => {\n                this.css(\"display\", \"none\");\n                opts.cb?.();\n            }\n        });\n        this.fade = false;\n        return this;\n    },\n\n    async fadeInP(this: HTMLElement, ...args: any[]): Promise<HTMLElement> {\n        return new Promise<HTMLElement>((resolve) => {\n            this.fadeIn(...args, () => resolve(this));\n        });\n    },\n\n    async fadeOutP(this: HTMLElement, ...args: any[]): Promise<HTMLElement> {\n        return new Promise<HTMLElement>((resolve) => {\n            this.fadeOut(...args, () => resolve(this));\n        });\n    },\n\n    fade: true,\n    fadeToggle(this: HTMLElement): HTMLElement {\n        this.fade ? this.fadeOut() : this.fadeIn();\n        return this;\n    },\n\n    add(this: HTMLElement, child: HTMLElement): HTMLElement {\n        this.appendChild(child);\n        return this;\n    },\n\n    addUp(this: HTMLElement, child: HTMLElement): HTMLElement {\n        this.insertBefore(child, this.firstChild);\n        return this;\n    },\n\n    qs<T = HTMLDivElement>(this: HTMLElement, selector: string, did: any = 0): T {\n        if (!!did) selector = `[data-id=\"${selector}\"]`;\n        return this.querySelector(selector) as T;\n    },\n\n    qi<T = HTMLInputElement>(this: HTMLElement, selector: string, did: any = 0): T {\n        return this.qs<T>(selector, did) as T;\n    },\n};\n\nfunction convert(\n    opts: Record<string, string>,\n    args: any[]\n): Record<string, any> {\n    const result: Record<string, any> = {};\n    if (args.length === 0) return result;\n    if (args.every((arg) => typeof arg === \"object\")) return Object.assign({}, ...args);\n\n    for (const value of args) {\n        for (const [key, expectedType] of Object.entries(opts)) {\n            if (typeof value === expectedType) {\n                result[key] = value;\n                break;\n            }\n        }\n    }\n\n    return result;\n}\n\nObject.assign(HTMLElement.prototype, proto);\nObject.assign(document, proto);\nObject.assign(document.body, proto);\nObject.assign(document.documentElement, proto);\nfor (const name of [\"qs\", \"qi\"]) {\n    if (typeof proto[name] === \"function\") {\n        window[name] = function (...args: any[]) {\n            return proto[name].apply(document, args);\n        };\n    }\n}"],
  "mappings": "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",
  "names": ["proto", "v", "event", "fn", "style", "val", "att", "arg", "className", "force", "from", "options", "time", "cb", "element", "targetOpacity", "startOpacity", "startTime", "step", "currentTime", "elapsed", "progress", "currentOpacity", "__name", "args", "opts", "convert", "display", "resolve", "child", "selector", "did", "result", "value", "key", "expectedType", "name"]
}
